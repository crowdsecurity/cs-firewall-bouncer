name: Test .deb packaging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    name: "Test .deb packages"
    runs-on: ubuntu-latest

    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: "Setup Python"
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        cache: 'pipenv'

    - name: "Install python dependencies"
      run: |
        python -m pip install --upgrade pipenv wheel
        pipenv install --deploy
        # some tests need root, so we have to install pytest twice
        sudo python3 -m pip install --upgrade pipenv wheel
        sudo pipenv install --deploy

    - name: Install functional test dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential debhelper devscripts fakeroot lintian
        docker network create net-test

    - name: Run functional tests
      env:
        CROWDSEC_TEST_VERSION: dev
        CROWDSEC_TEST_FLAVORS: full
        CROWDSEC_TEST_NETWORK: net-test
        CROWDSEC_TEST_TIMEOUT: 60
        PYTEST_ADDOPTS: --durations=0 -vv --color=yes
      run: |
        sudo apt install -y nftables iptables ipset
        pipenv run pytest test/pkg/test_build_deb.py
        sudo -E pipenv run pytest -m deb ./test/install/no_crowdsec
